#!/bin/bash

project_prefix=vault-demo

function compose_destroy() {
  case "$1" in
    single)
      pushd standalone/
      docker-compose -p="$project_prefix-$1-instance" down -v --rmi local
      find vault/tmp -mindepth 1 ! -name '*.md' -delete
      find vault/tmp -mindepth 1 ! -name '*.md' -delete
      popd
      ;;
    cluster)
      pushd cluster/
      docker-compose -p="$project_prefix-$1" down -v --rmi local
      find vault/tmp -mindepth 1 ! -name '*.md' -delete
      find vault/tmp -mindepth 1 ! -name '*.md' -delete
      popd
      ;;
    *)
      printf "\n%s" \
      "Destroys the Vault demo components." \
      "Usage: $script_name destroy [single|cluster]" \
      "" \
      ""
      ;;
  esac
}
#trap cleanup SIGKILL SIGINT

function compose_build() {
  case "$1" in
    single)
      pushd standalone/
      docker-compose -p="$project_prefix-$1-instance" up -d
      popd
      ;;
    cluster)
      pushd cluster/
      docker-compose -p="$project_prefix-$1" up -d
      popd
      ;;
    *)
      printf "\n%s" \
      "Creates the Vault deployment based on size desired." \
      "Usage: $script_name build [single|cluster]" \
      "" \
      ""
      ;;
  esac
}

function compose_rebuild() {
  case "$1" in
    single)
      compose_destroy "$@"
      compose_build "$@"
      ;;
    cluster)
      compose_destroy "$@"
      compose_build "$@"
      ;;
    *)
      printf "\n%s" \
      "Destroys & rebuilds the Vault demo environment." \
      "Usage: $script_name rebuild [single|cluster]" \
      "" \
      ""
      ;;
  esac
}

case "$1" in
  build)
    shift ;
    compose_build "$@"
    ;;
  destroy)
    shift ;
    compose_destroy "$@"
    ;;
  rebuild)
    shift ;
    compose_rebuild "$@"
    ;;
  *)
    printf "\n%s" \
      "This script deploys a Vault demo environment in either a standalone (w/ file storage)" \
      "or clustered (w/ raft storage) architecture." \
      "View the README.md for more info" \
      "" \
      "Usage: $script_name [build|destroy|rebuild] [single|cluster]" \
      "" \
      ""
    ;;
esac

