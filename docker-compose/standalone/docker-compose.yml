version: '3.8'

networks:
  internal:
    driver: bridge
    attachable: true
    ipam:
      driver: default
      config:
        - subnet: ${NWCIDRBLOCK}

services:
  vault-server:
    depends_on:
      - "splunk"
    image: hashicorp/vault-enterprise
    hostname: vault-server
    container_name: vault-server
    networks:
      - internal
    ports:
      - "8200:8200"
    environment:
      VAULT_ADDR: "http://127.0.0.1:8200"
      ROOT_NAMESPACE: ${ROOT_NAMESPACE}
    volumes:
      - ../assets/vault/policies:/vault/policies:ro
      - ../assets/vault/config:/vault/config:ro
      - ../assets/vault/plugins:/vault/plugins:ro
      - ./vault/tmp:/vault/file
      - ./vault/tmp:/vault/logs
      - ./vault/tmp:/tmp/outputs
    cap_add:
      - IPC_LOCK
    entrypoint: vault server -config=/vault/config/standalone.hcl

  helper:
    depends_on: 
      - "vault-server"
    hostname: helper
    container_name: helper
    build: ../assets/helper/.
    stdin_open: true # docker run -i
    tty: true
    environment:
      - PGPASSWORD=${POSTGRES_PASSWORD}
    env_file: .env
    volumes:
      - ../assets/vault:/vault
      - ../assets/postgres:/tmp/seed-db:ro
      - ./vault/tmp:/tmp/outputs
    networks:
      - internal

  splunk:
    networks:
      - internal
    image: splunk/splunk:8.1
    hostname: splunk
    container_name: splunk
    volumes:
      - ../assets/splunk/vault-app-for-splunk:/opt/splunk/etc/apps/vault
      - ./vault/tmp:/vault/logs:ro
    environment:
      - SPLUNK_USER:root
      - SPLUNK_START_ARGS='--accept-license --answer-yes'
      - SPLUNK_PASSWORD=${password}
    ports:
      - 8000:8000

  telegraf:
    networks:
      - internal
    image: telegraf
    hostname: telegraf
    container_name: telegraf
    volumes:
      - ../assets/telegraf/file_output.conf:/etc/telegraf/telegraf.conf:ro
      - ./vault/tmp:/tmp/outputs
    ports:
      - 8125:8125/udp

  postgres:
    image: postgres
    hostname: postgres
    container_name: postgres
    networks:
      - internal
    env_file: .env #configure postgres
    ports:
      - '5432:5432'
    volumes: 
      - ../assets/postgres:/tmp/seed-db:Z

  ubuntu:
    hostname: ubuntu
    container_name: ubuntu
    build: ../assets/ubuntu-ssh/.
    stdin_open: true 
    tty: true
    env_file: .env
    networks:
      - internal